apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: my-registry
  name: my-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-registry
  template:
    metadata:
      labels:
        app: my-registry
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - my-registry
            topologyKey: "kubernetes.io/hostname"
      containers:
      - env:
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /auth/htpasswd
        - name: REGISTRY_HTTP_ADDR
          value: :5000
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: /var/lib/registry
        image: registry:2.6.2
        imagePullPolicy: IfNotPresent
        name: registry
        ports:
        - containerPort: 5000
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/registry
          name: registry-data
        - mountPath: /auth/htpasswd
          name: cm-htpasswd
          subPath: htpasswd
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: registry-data
        persistentVolumeClaim:
          claimName: registry-data
      - configMap:
          defaultMode: 420
          items:
          - key: htpasswd
            path: htpasswd
          name: cm-htpasswd
        name: cm-htpasswd
